// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qMKbWqzZjuHb1yLhCiN5Mq
// Component: ToMbPngmeHPx
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateStateOnChangeProp,
  generateStateValueProp,
  set as $stateSet,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import Button2 from "../../Button2"; // plasmic-import: lci14Q3sXnn8/component
import { useScreenVariants as useScreenVariants_9QPfl0YfbSni } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 9qPFL0yfbSNI/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: qMKbWqzZjuHb1yLhCiN5Mq/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: ToMbPngmeHPx/css
import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: Eox2JrlKfBxf/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: Nnwij3aK23vB/icon
import Icon16Icon from "./icons/PlasmicIcon__Icon16"; // plasmic-import: 8wr_mJ334oiV/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: _BR6D5Lc2J7e/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: 661ZLE6xJIll/icon
import Icon28Icon from "./icons/PlasmicIcon__Icon28"; // plasmic-import: r-7MHc-ORE0U/icon

createPlasmicElementProxy;

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "email.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "password.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "showLoginForm",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_9QPfl0YfbSni()
  });
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            hasGap={true}
            className={classNames(projectcss.all, sty.header)}
          >
            <div className={classNames(projectcss.all, sty.freeBox___8M0Dp)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ccVsY)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fjF8P)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__yh7Ye)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"40px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/blank_website/images/logoSecaasVmsPng.png",
                      fullWidth: 188,
                      fullHeight: 138,
                      aspectRatio: undefined
                    }}
                  />

                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__cIfs5)}
                  >
                    <Button2
                      data-plasmic-name={"btnFeatures"}
                      data-plasmic-override={overrides.btnFeatures}
                      className={classNames("__wab_instance", sty.btnFeatures)}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__vnyoi)}
                          role={"img"}
                        />
                      }
                      startIcon={
                        <CheckSvgIcon
                          className={classNames(projectcss.all, sty.svg__aRuiR)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__k7UOv
                        )}
                      >
                        {"Features"}
                      </div>
                    </Button2>
                    <Button2
                      data-plasmic-name={"btnCompany"}
                      data-plasmic-override={overrides.btnCompany}
                      className={classNames("__wab_instance", sty.btnCompany)}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__sa6Ut)}
                          role={"img"}
                        />
                      }
                      startIcon={
                        <CheckSvgIcon
                          className={classNames(projectcss.all, sty.svg__c70)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kZS
                        )}
                      >
                        {"Company"}
                      </div>
                    </Button2>
                    <Button2
                      data-plasmic-name={"btnContact"}
                      data-plasmic-override={overrides.btnContact}
                      className={classNames("__wab_instance", sty.btnContact)}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__k83Tu)}
                          role={"img"}
                        />
                      }
                      startIcon={
                        <CheckSvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___1KCbv
                          )}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wRnQf
                        )}
                      >
                        {"Contact"}
                      </div>
                    </Button2>
                    <Button2
                      data-plasmic-name={"btnLogin"}
                      data-plasmic-override={overrides.btnLogin}
                      className={classNames("__wab_instance", sty.btnLogin)}
                      color={"blue"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___5R3N2
                          )}
                          role={"img"}
                        />
                      }
                      onClick={async event => {
                        const $steps = {};
                        $steps["updateShowLoginForm"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: ["showLoginForm"]
                                },
                                operation: 0,
                                value: !$state.showLoginForm
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;
                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateShowLoginForm"] != null &&
                          typeof $steps["updateShowLoginForm"] === "object" &&
                          typeof $steps["updateShowLoginForm"].then ===
                            "function"
                        ) {
                          $steps["updateShowLoginForm"] = await $steps[
                            "updateShowLoginForm"
                          ];
                        }
                      }}
                      showStartIcon={true}
                      startIcon={
                        <CheckSvgIcon
                          className={classNames(projectcss.all, sty.svg__io84Z)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__f9Nan
                        )}
                      >
                        {"Get started"}
                      </div>
                    </Button2>
                  </Stack__>
                  {false ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox___3EUn)}
                    >
                      <button
                        data-plasmic-name={"button"}
                        data-plasmic-override={overrides.button}
                        className={classNames(
                          projectcss.all,
                          projectcss.button,
                          projectcss.__wab_text,
                          sty.button
                        )}
                      >
                        {"Sign up"}
                      </button>
                      <Button2
                        className={classNames(
                          "__wab_instance",
                          sty.button2___4XeP
                        )}
                        color={"clear"}
                        endIcon={
                          <Icon38Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__tkVsC
                            )}
                            role={"img"}
                          />
                        }
                        startIcon={
                          <CheckSvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__uzxIq
                            )}
                            role={"img"}
                          />
                        }
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__sXvjc
                          )}
                        >
                          {"Log in"}
                        </div>
                      </Button2>
                    </div>
                  ) : null}
                </Stack__>
              </Stack__>
            </div>
            {(() => {
              try {
                return $state.showLoginForm;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return true;
                }
                throw e;
              }
            })() ? (
              <Stack__
                as={"div"}
                data-plasmic-name={"loginForm"}
                data-plasmic-override={overrides.loginForm}
                hasGap={true}
                className={classNames(projectcss.all, sty.loginForm)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__cNk0X)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___7Xgd7)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__uvRR)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___2H88X
                        )}
                      >
                        {"Updated!"}
                      </div>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vvF5T
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ textDecoration: "underline" }}
                        >
                          {"Hello! Nice having you again."}
                        </span>
                      </React.Fragment>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__o8FKc
                      )}
                    >
                      {"Enter your credentials to sign in."}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__sHpTg)}
                  >
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__yXcO
                      )}
                      color={"red"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__gcCvV)}
                          role={"img"}
                        />
                      }
                      link={"https://google.com"}
                      startIcon={
                        <CheckSvgIcon
                          className={classNames(projectcss.all, sty.svg__iWPm)}
                          role={"img"}
                        />
                      }
                      submitsForm={false}
                      target={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__l7Zvk
                        )}
                      >
                        {"I don't have an account"}
                      </div>
                    </Button2>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__t9Lj)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__fyU28)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___6Pu4J
                      )}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__kIwtF
                        )}
                      >
                        <input
                          data-plasmic-name={"email"}
                          data-plasmic-override={overrides.email}
                          className={classNames(
                            projectcss.all,
                            projectcss.input,
                            sty.email
                          )}
                          onChange={e => {
                            generateStateOnChangeProp($state, [
                              "email",
                              "value"
                            ])(e.target.value);
                          }}
                          placeholder={"Your registered email address"}
                          ref={ref => {
                            $refs["email"] = ref;
                          }}
                          size={1}
                          type={"text"}
                          value={
                            generateStateValueProp($state, [
                              "email",
                              "value"
                            ]) ?? ""
                          }
                        />

                        <input
                          data-plasmic-name={"password"}
                          data-plasmic-override={overrides.password}
                          className={classNames(
                            projectcss.all,
                            projectcss.input,
                            sty.password
                          )}
                          disabled={(() => {
                            try {
                              return (
                                $state.email.value && $state.email.value !== ""
                              );
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()}
                          onChange={e => {
                            generateStateOnChangeProp($state, [
                              "password",
                              "value"
                            ])(e.target.value);
                          }}
                          placeholder={"Your password"}
                          ref={ref => {
                            $refs["password"] = ref;
                          }}
                          size={1}
                          type={"text"}
                          value={
                            generateStateValueProp($state, [
                              "password",
                              "value"
                            ]) ?? ""
                          }
                        />
                      </Stack__>
                      <Button2
                        className={classNames(
                          "__wab_instance",
                          sty.button2__fhmMn
                        )}
                        endIcon={
                          <Icon38Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__jobQr
                            )}
                            role={"img"}
                          />
                        }
                        startIcon={
                          <CheckSvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___5RZjD
                            )}
                            role={"img"}
                          />
                        }
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___2C78S
                          )}
                        >
                          {"Sign in ->"}
                        </div>
                      </Button2>
                    </Stack__>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__aOjLn)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___1XyJ3
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xlsM
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>
                            {"To sign in, you need to have an active "}
                          </React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"SECaaS"}
                          </span>
                          <React.Fragment>
                            {
                              " account. \n\nDon't have an account yet? Contact us at secaas@thano.id or click here and fill out a simple form. We'll contact you right away. "
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </div>
                  </div>
                </Stack__>
              </Stack__>
            ) : null}
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            hasGap={true}
            className={classNames(projectcss.all, sty.hero)}
          >
            <div className={classNames(projectcss.all, sty.columns__zJsd)}>
              <div className={classNames(projectcss.all, sty.column__qmLj1)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__xqae3)}
                  displayHeight={"100%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"320px"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  src={
                    "https://images.unsplash.com/photo-1530099486328-e021101a494a?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2916&q=80"
                  }
                />

                <div
                  data-plasmic-name={"background2"}
                  data-plasmic-override={overrides.background2}
                  className={classNames(projectcss.all, sty.background2)}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__cjVpt)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___3GQlg)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"copy"}
                    data-plasmic-override={overrides.copy}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.copy)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__fiQ3F)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vdTnO
                        )}
                      >
                        {"Welcome"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___57J76
                        )}
                      >
                        {"Let's get going"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yCuyK
                        )}
                      >
                        {
                          "Consectetur a adipiscing sagittis sed proin libero himenaeos ornare adipiscing suscipit leo vestibulum facilisi consequat nisi nisi adipiscing habitant facilisis suspendisse hac integer eget quam facilisis sem placerat fames."
                        }
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__rOjMh)}
                    >
                      <Button2
                        className={classNames(
                          "__wab_instance",
                          sty.button2__ruGTx
                        )}
                        color={"blue"}
                        endIcon={
                          <Icon38Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__vGoVe
                            )}
                            role={"img"}
                          />
                        }
                        startIcon={
                          <CheckSvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__f65D8
                            )}
                            role={"img"}
                          />
                        }
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xQhc5
                          )}
                        >
                          {"Start now ->"}
                        </div>
                      </Button2>
                      <Button2
                        className={classNames(
                          "__wab_instance",
                          sty.button2__upLte
                        )}
                        color={"clear"}
                        endIcon={
                          <Icon38Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__qeZvM
                            )}
                            role={"img"}
                          />
                        }
                        startIcon={
                          <CheckSvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__b9OZc
                            )}
                            role={"img"}
                          />
                        }
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fEzGu
                          )}
                        >
                          {"Learn more\u2026"}
                        </div>
                      </Button2>
                    </Stack__>
                  </Stack__>
                </Stack__>
              </div>
            </div>
          </Stack__>
          <Stack__
            as={"section"}
            data-plasmic-name={"features"}
            data-plasmic-override={overrides.features}
            hasGap={true}
            className={classNames(projectcss.all, sty.features)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"foreground"}
              data-plasmic-override={overrides.foreground}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__ncHj1)}
              >
                <div className={classNames(projectcss.all, sty.column__y7Uho)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__hNaLy)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pB7E
                      )}
                    >
                      {"Freedoms"}
                    </div>
                    <h2
                      data-plasmic-name={"h2"}
                      data-plasmic-override={overrides.h2}
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2
                      )}
                    >
                      {"Open by design"}
                    </h2>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4YpW
                      )}
                    >
                      {
                        "Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies."
                      }
                    </div>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__kKmuW
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__mzwHf)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <CheckSvgIcon
                          className={classNames(projectcss.all, sty.svg__tlnzI)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hkzHf
                        )}
                      >
                        {"Learn more"}
                      </div>
                    </Button2>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__jI0M)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tVkE5)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ccPfq)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ylXw7
                        )}
                      >
                        {"Built on capability"}
                      </div>
                      <Icon16Icon
                        className={classNames(projectcss.all, sty.svg___3LiNb)}
                        role={"img"}
                      />
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__yFqI)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qfpZo
                        )}
                      >
                        {"Highly energetic"}
                      </div>
                      <Icon16Icon
                        className={classNames(projectcss.all, sty.svg___3FGsU)}
                        role={"img"}
                      />
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__cC9Kh)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___7I4G
                        )}
                      >
                        {"100% transparency and accountability"}
                      </div>
                      <Icon16Icon
                        className={classNames(projectcss.all, sty.svg__lgbYe)}
                        role={"img"}
                      />
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__e9Bu6)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8B22Q
                        )}
                      >
                        {"Refreshing clarity"}
                      </div>
                      <Icon16Icon
                        className={classNames(projectcss.all, sty.svg__k8Bnb)}
                        role={"img"}
                      />
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__dif4A)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__r7W1S
                        )}
                      >
                        {"Modern results"}
                      </div>
                      <Icon16Icon
                        className={classNames(projectcss.all, sty.svg__gxmQa)}
                        role={"img"}
                      />
                    </Stack__>
                  </div>
                </div>
              </Stack__>
            </Stack__>
          </Stack__>
          <div className={classNames(projectcss.all, sty.freeBox___37Hqc)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__dVA4)}
            >
              <div className={classNames(projectcss.all, sty.column__ice7)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__uFuuw)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__kkNWj)}
                    displayHeight={"40px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"40px"}
                    src={{
                      src: "/plasmic/blank_website/images/logoSecaasVmsPng.png",
                      fullWidth: 188,
                      fullHeight: 138,
                      aspectRatio: undefined
                    }}
                  />

                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__onrgY)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qrkRk
                      )}
                    >
                      {"Connect with us"}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___2R40V
                      )}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__oYs7P)}
                        role={"img"}
                      />

                      <Icon2Icon
                        className={classNames(projectcss.all, sty.svg__vLzqu)}
                        role={"img"}
                      />

                      <Icon28Icon
                        className={classNames(projectcss.all, sty.svg__niN79)}
                        role={"img"}
                      />
                    </Stack__>
                  </Stack__>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__yCSzE)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__awaZf)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yeW0U
                    )}
                  >
                    {"Product"}
                  </div>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__k9ILe)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__obxiA)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <CheckSvgIcon
                        className={classNames(projectcss.all, sty.svg__pdmmW)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___286Cp
                      )}
                    >
                      {"Pricing"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__l3Mux)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__xzH)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <CheckSvgIcon
                        className={classNames(projectcss.all, sty.svg__xAqVq)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___31Nqz
                      )}
                    >
                      {"Log in"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames(
                      "__wab_instance",
                      sty.button2___43FK7
                    )}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__v053Q)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <CheckSvgIcon
                        className={classNames(projectcss.all, sty.svg__hlqCd)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wVyxj
                      )}
                    >
                      {"Integrations"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__eRhYe)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__uBsjj)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <CheckSvgIcon
                        className={classNames(projectcss.all, sty.svg__mCk4R)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8E9Ww
                      )}
                    >
                      {"Insights"}
                    </div>
                  </Button2>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__wUx5M)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__e3AU8)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lPeZq
                    )}
                  >
                    {"Support"}
                  </div>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__adNpl)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__hvpYf)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <CheckSvgIcon
                        className={classNames(projectcss.all, sty.svg__qzmYw)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vnypo
                      )}
                    >
                      {"Documentation"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__cgM2R)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__ii4Cs)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <CheckSvgIcon
                        className={classNames(projectcss.all, sty.svg___7LP45)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ouvTb
                      )}
                    >
                      {"FAQs"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__gO7Io)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__oeysg)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <CheckSvgIcon
                        className={classNames(projectcss.all, sty.svg__ct30J)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0TtH3
                      )}
                    >
                      {"Status"}
                    </div>
                  </Button2>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__nhsS1)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__susR)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8GbrY
                    )}
                  >
                    {"Company"}
                  </div>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__tkreS)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__rw7Ti)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <CheckSvgIcon
                        className={classNames(projectcss.all, sty.svg__fdxBi)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__r1A9S
                      )}
                    >
                      {"About"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__vi0Z)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg___7Lv0Y)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <CheckSvgIcon
                        className={classNames(projectcss.all, sty.svg__an4Ou)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tsXe
                      )}
                    >
                      {"Contact us"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2___9QEw)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__nF8BV)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <CheckSvgIcon
                        className={classNames(projectcss.all, sty.svg___1U3I)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ease
                      )}
                    >
                      {"Careers"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__nQ4D)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__cr5A)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <CheckSvgIcon
                        className={classNames(projectcss.all, sty.svg__zSdyT)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vLqip
                      )}
                    >
                      {"Media"}
                    </div>
                  </Button2>
                </Stack__>
              </div>
            </Stack__>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "btnFeatures",
    "btnCompany",
    "btnContact",
    "btnLogin",
    "button",
    "loginForm",
    "email",
    "password",
    "hero",
    "background2",
    "copy",
    "features",
    "foreground",
    "h2"
  ],

  header: [
    "header",
    "btnFeatures",
    "btnCompany",
    "btnContact",
    "btnLogin",
    "button",
    "loginForm",
    "email",
    "password"
  ],

  btnFeatures: ["btnFeatures"],
  btnCompany: ["btnCompany"],
  btnContact: ["btnContact"],
  btnLogin: ["btnLogin"],
  button: ["button"],
  loginForm: ["loginForm", "email", "password"],
  email: ["email"],
  password: ["password"],
  hero: ["hero", "background2", "copy"],
  background2: ["background2"],
  copy: ["copy"],
  features: ["features", "foreground", "h2"],
  foreground: ["foreground", "h2"],
  h2: ["h2"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    btnFeatures: makeNodeComponent("btnFeatures"),
    btnCompany: makeNodeComponent("btnCompany"),
    btnContact: makeNodeComponent("btnContact"),
    btnLogin: makeNodeComponent("btnLogin"),
    button: makeNodeComponent("button"),
    loginForm: makeNodeComponent("loginForm"),
    email: makeNodeComponent("email"),
    password: makeNodeComponent("password"),
    hero: makeNodeComponent("hero"),
    background2: makeNodeComponent("background2"),
    copy: makeNodeComponent("copy"),
    features: makeNodeComponent("features"),
    foreground: makeNodeComponent("foreground"),
    h2: makeNodeComponent("h2"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
